Links
http://vimcasts.org/
https://thoughtbot.com/upcase/vim

Books
Practical Vim, Edit at Speed of Thought, Drew Neil
vim script   tim loche  learning vim script the hard way
 
:set is for setting options, :let for assigning a value to a variable.

if vi freezes, try ctrl q

Emmet commands
http://docs.emmet.io/
http://docs.emmet.io/cheat-sheet/
ctrl shift g  wrap selected html
ctrl ,  balance outward
ctrl shift 0  balance inward
ctrl alt j  goto matching tag
vim trigger sequence: space ctrl y , 
check out the “surround” plugin for surrounding content with html tags, tim pope

Movement
h j k l       move left down up right  
w/W b/B e/E   move forward, back, end of word 
0 ^ $         move to beginning, first text, end of line  
H M L         top/middle/bottom of window   
G gg          move to beginning, end of file  
f/F char      find next/prev letter on current line  
t/T char      find next/prev letter and put cursor before it  
ctrl f b      scroll down/up 1 page (vim only, conflict in sublime)
ctrl e y      scroll down/up 1 line
zt/zz         move window so current line is on top/middle  
:set number   adds line numbers in vim  
:14           go to line 14 (vim)
ctrl g        go to line (sublime)
{  }          move up/down paragraph

Repeater
repeater  type number before command  
5k  goes five lines up  
.  repeat the previous command
u  undo previous action  
ctrl r   redo an undo
p  paste after cursor   
P  paste before cursor (use this one)  
:set paste -> paste from clipboard -> :set nopaste to restore autoindenting
3fk find the 3rd k on the current line

Lines
dd   cut line  
cc   cut line and put in insert mode  
o    insert new line below   O new line above
yy   copy line  
I    insert mode at beginning of line
A    append at end of line (append)
D    delete under cursor to end of line  
ct"  cuts all text up to the next quote char   
ctrl m        go to matching bracket
ctrl shift ,  select text in quotes

Combining Lines
J    combine line to next line
4J   combine 4 lines together (or use visual mode J)
gJ   same as J but doesnt add spaces

Words and Characters
dw  delete next word  
cw  cut word and put in insert mode
db  delete prev word  
yw  copy word  
x/X delete a char after/before cursor (delete/backspace keys)  
a   append char after cursor
s   delete char at cursor and go to insert mode (quick replace of char)  
bksp/del use these during insert mode to delete
r   replace single char

Changing
ci = change inside       ct = change ‘til (doesnt include char)   cf = change find (does include char)
ci’ change the text inside first quotes found after cursor (even if cusor is at beginning of line)
ci( same (but may need to move inside parens if you are in nested paren)
ct" - cuts all text up to the next quote char 
ci{ - cut inside curly braces (or brackets, quotes, etc)
ca{ - cut inside including curly braces
ci>   cut inside html/xml tags 

Cut and Paste Registers
select what you want in visual mode
“kyy  yank into the ‘k’ register (any letter you want)
“kp   paste from the ‘k’ register

Case and Comments
gu/gU          lowercase/uppercase (vim and sublime)
ctrl+kl/ku     lowercase/uppercase (sublime)
ctrl /         toggle comment (line)
ctrl shift /   toggle comment (block)
ctrl v -> highlight block -> shift i -> // -> ESC   block comment

Highlighting
v              visual mode - highlight character level  	
V              visual line mode - full line highlight  
ctrl v         visual block mode

ctrl v -> highlight block -> I -> enter text -> ESC   insert text b4 each row
ctrl v -> highlight block -> A -> enter text -> ESC   append text after each row

o  switch sides of highlight block when in visual mode  

Whitespace and Special Characters
:set list      show special characters
:set nolist    hide special characters
tabstop        number of spaces to indent
expandtab      use spaces in place of tabs
softtabstop and shiftwidth should be set to tabstop

Filetypes and Syntax Highlighting
:set filetype? or :set ft?    display the current filetype
:set filetype=json            set filetype syntax highlighting manually

Search and Replace 
/term  search forward
?term  search backward
n/N    next/prev search hit
star   search forward on term under cursor 
#      search backward on term under cursor 

:set incsearch (:set noincsearch)- turn on/off incremental search (enter ends search)  
:set ignorecase (:set noignorecase) - turn on/off case sensitivity  
:set hlsearch (:set nohlsearch) - turn on/off hightlight search  
:noh - temporarily turn off hightlight search  
/.[aeiou] - regex search for any char followed by vowel  
d/myword - delete everything from cursor up to the word "myword"  

:s/search/replace      replace the first term on line  
:s/search/replace/g    replace all terms on line  
:%s/search/replace/g   replace all terms in the file  
:s/search/replace/gc   the c is a confirm flag  

% find corresponding brace, bracket, comment

Insert same chars across multiple lines http://bit.ly/2nibbrK
But this sometimes conflicts with sublime

File Saving and Quitting
:wa     write all changed buffers
:wqa    write all and quit
:qa!    get out of vim, uncommitted changes lost
ZZ      save if modified and quit
:e!     reopens a file from disk discarding any edits
:e      filename.txt - opens and edits a file  

:e ~/.vimrc - edit vimrc file  
:source ~/.vimrc - reloads vimrc settings  

navigation in insert mode
ctrl-o  allows you to do one command while in insert mode
:h ins-special-keys. 
ctrl-h: backspace, ctrl-w: delete word, ctrl-u: delete to beginning of line, alt-b: go back a word

:version   shows installed features
:h  :help   help horizontal
:vert help  help vertical 
:h quickref  
:vert h quickref - bring up help in side panel   
navigating help   ctrl ]   ctrl o

q<register> - start recording a macro into register <register> (must be single char)  
qa - start recording into register a  
q - stop recording  
@<register> - execute macro  
@a - execute register a  
:registers - shows registers  

Invoke shell commands from vi  
:!ls -al  
to read date from command line to cursor location  
:read !date  or :r !date  
to read web request into file  
:r !curl --silent http://www.google.com  
compile from vim  
:!gcc   

Buffers and Multiple open files
:ls - lists all open files in vim (buffer)  	
:bn - :bnext - navigates to next file (buffer next)  
:bp - previous file in (buffer prev)     
:bf - first file in buffer  
:bd - close file (delete buffer)  
ctrl-G - get status of file, modified, line count etc  

Multiple windows
:vs  :vsplit <filename>  
ctrl-w w  navigate to other window (cycle thru)
ctrl-w q  quit open window
ctrl-w h,j,k,l - navigate to other windows directionally
ctrl-w H,J,K,L - move window to left,bottom,top,right side  
ctrl-w 10+ 10- increase/decrease window height by 10 lines  
ctrl-w 10> 10< increase/decrease window width by 10 lines  
ctrl-w =  equally distribute height/width of windows  

good pattern to search and open files in new window:  
:ls - list the files open in buffer  
:sb2 - opens the second file/buffer in new window (horizontal)  
:vert sb2 - opens the second file/buffer in new window (vertical)  

Tabs
:tabe <filename>   :tabedit    
gt - go to next tab  
gT - go to prev tab  
#gt - goes to # tab  (4gt fourth tab)
:tabmove 1/2/3    moves tab into position 1/2/3

Indentation
use >> to indent line  
5>> indent 5 lines  
:set expandtab - change tabs to spaces
:set noexpandtab - use tabs 
:set shiftwidth=4 - set indents to 4 spaces  
:set softtabstop=4 - set tabs to 4 spaces  

use visual mode to select and indent multiple lines:  
shift v to enter visual mode  
highlight your lines  
shift > or < to indent or undent  
gv will reselect the visual if you want to repeat  

in insert mode ctrl-T will indent, ctrl-D will undent (useful)  

use smartindent to line up code when adding new line (o command)  
:set smartindent  
to fixup/smartindent the whole file go to beginning of file and =G  

Folds
zf 5j - create a fold of 5 lines  
zo / zc / zd - open, close, delete fold  
	
Package Management
pathogen - older tool for installing plugins 
Vundle - new tool built on top of pathogen  (use this)
:PluginSearch markdown     search available list of vim plugins for markdown related plugins (i to install)
:PluginList                show installed plugins
You need to add/remove plugins from your .vimrc manually.  Then run...
:PluginClean               sync your installed plugins with your .vimrc file
:PluginInstall

Color Schemes
:colorscheme  :colo monokai     change color scheme
:colo <tab>                     tab thru color schemes

:pwd shows current working directory

Folder Trees and Directory Structure
nerdtree - popular plugin for navigating folder tree (dont need this use Explore/netrw instead because its builtin)  
if nerdtree is installed, it will conflict with netrw/Explore, so dont install it.
https://shapeshed.com/vim-netrw/
Explore == netrw plugin.  Vim’s native folder tree.
:Explore :Ex    open directory of current file
:edit .  :e.    open project root
:split  :sp.    split window horizontally
:vsplit  :vs.   split window vertically
:Sex            split window horizontally on current directory
:Vex            split window vertically on current directory
i  cycle through view types:  thin, long, wide, tree  (let g:netrw_liststyle = 3)
I  toggle the top banner on/off     (let g:netrw_banner = 0)

Use ctrl-P for fuzzy file search
http://ctrlpvim.github.io/ctrlp.vim/#installation

- goes up a directory
d creates a new directory  
D deletes a directory or file  
% creates and opens a new file  
R renames a file  
enter opens file in current window
o opens the file in a horizontal split  
v opens the file in a vertical split  

f<letter> find next letter on current line
F<letter> find prev letter on current line
t<letter> find next letter and put cursor before it
T<letter> find next letter and put cursor after it

v visual mode - highlight up/down	
V visual mode - full line highlight
use o key to switch sides when in visual mode

.vimrc
" fuzzy search for files
" use the :find command and this path setting
" will find files in subdirectories too
" OR use the ctrl-p plugin 
set path+=**



